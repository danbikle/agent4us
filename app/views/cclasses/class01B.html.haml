%h1 Class01B

%p This class is under construction.
%hr/


%h2#top Concepts/Topics
%ul
  %li
    %a(href='#linked_list') Linked List

  %li
    %a(href='#block_chain') Blockchain

%hr/
%h3#linked_list Linked List

%p q: What is a Linked List?

%p
  %a(href='https://www.google.com/search?q=What+is+a+Linked+List?' target='x')
    https://www.google.com/search?q=What+is+a+Linked+List?

%p.p_dark_green
  Code Exercise:
  %br/
  With Python, create a Linked List.
    
.syntax
  %pre.sbar999
    =render 'class01B10'

%p I ran the above script and captured output:
 
.syntax
  %pre.sbar999
    =render 'class01B12'

%a(href='#top') Top
%hr/

%p.p_dark_green
  Code Exercise:
  %br/
  With Python, enhance the above script to use a class named LinkedList which has method: add_member.

%p This was an easy exercise:

.syntax
  %pre.sbar999
    =render 'class01B14'

%p I ran the above script and captured output:
 
.syntax
  %pre.sbar999
    =render 'class01B16'

%a(href='#top') Top
%hr/

%h3#block_chain Blockchain

%p q: What is a Blockchain?

%p
  %a(href='https://www.google.com/search?q=What+is+a+Blockchain?' target='x')
    https://www.google.com/search?q=What+is+a+Blockchain?

%p Most descriptions of "Blockchain" that I find via Google are more complex than the idea of a Blockchain described by the lecture.

%p The lecture presents a simple view of a blockchain:

%p A blockchain is like a linked list with the additional feature of each element holding a secure-hash of the next, linked element.

%p Using the idea of "Commitment" from the previous lecture, I see a blockchain as a sequence of linked Commitments.

%p A use-case of this simple type of blockchain is "tamper-proof" log.

%p Although I might be able to tamper with the log after I create it, I will not be able to hide the fact that the log has been tampered with.

%p This feature can be described with two statements:

%ul
  %li A blockchain which has not been tampered with is valid.
  %li A blockchain which has been tampered with is invalid.

%p.p_dark_green
  Code Exercise:
  %br/
  With Python, create a simple blockchain which is a linked sequence of commitments.

.syntax
  %pre.sbar999
    =render 'class01B18'
