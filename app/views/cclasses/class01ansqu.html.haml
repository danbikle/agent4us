%h1
  Answer questions about some API calls in
  %a(href='https://github.com/matthiasplappert/keras-rl/blob/master/examples/dqn_cartpole.py' target='x') dqn_cartpole.py

%ul
  %li
    Where do I find
    %a(href='https://github.com/matthiasplappert/keras-rl/blob/master/examples/dqn_cartpole.py' target='x') dqn_cartpole.py?
  %li
    .syntax
      %pre
        =render 'class01ansqu10'
        
  %li
    Can you describe a use-case solved by
    %a(href='https://github.com/matthiasplappert/keras-rl/blob/master/examples/dqn_cartpole.py' target='x') dqn_cartpole.py?
  %li
    .syntax
      %pre
        =render 'class01ansqu12'

  %li
    Can you describe the imports at the top of
    %a(href='https://github.com/matthiasplappert/keras-rl/blob/master/examples/dqn_cartpole.py' target='x') dqn_cartpole.py?
  %li
    .syntax
      %pre
        =render 'class01ansqu14'

  %li
    After the imports, I see a small group of syntax:
    .syntax
      %pre
        =render 'class01ansqu16'
  %li What does that syntax do?
  %li 
    .syntax
      %pre
        =render 'class01ansqu18'
  %li
    %a(href='https://www.google.com/search?q=In+Reinforcement+Learning,+What+is+an+Episode' target='x')
      https://www.google.com/search?q=In+Reinforcement+Learning,+What+is+an+Episode
  %li 
    .syntax
      %pre
        %code
          An example of an episode is one chess match.
          For the cart-pole demo an episode will end in a variety of ways, for example if the pole falls over.
          More info:
          %a(href='https://stats.stackexchange.com/questions/250943/what-is-the-difference-between-episode-and-epoch-in-deep-q-learning' target='x')
            https://stats.stackexchange.com/questions/250943/what-is-the-difference-between-episode-and-epoch-in-deep-q-learning
          %a(href='https://www.quora.com/What-does-the-term-%E2%80%9Cepisode%E2%80%9D-mean-in-the-context-of-reinforcement-learning-RL' target='x')
            https://www.quora.com/What-does-the-term-%E2%80%9Cepisode%E2%80%9D-mean-in-the-context-of-reinforcement-learning-RL
  

  %li
    Returning my attention to:
    %a(href='https://github.com/matthiasplappert/keras-rl/blob/master/examples/dqn_cartpole.py' target='x') dqn_cartpole.py
    I step into the next line of syntax with the pdb-debugger:
    
    .syntax
      %pre
        %code.python env.seed(123)
        
    .syntax
      %pre
        =render 'class01ansqu20'
        
    So, that call: "Sets the seed for this env's random number generator(s)."
  

  %li
    I used the debugger again to study the next line of syntax:
    
    .syntax
      %pre
        %code.python nb_actions = env.action_space.n
        
    .syntax
      %pre
        =render 'class01ansqu22'

    I see that call getting an integer from an attribute called action_space.
    %br/
    This attribute is a function call: Discrete(2).
    
    %ul
      %li
        %a(href='https://www.google.com/search?q=In+openai+gym,+what+is+Discrete()' target='x')
          https://www.google.com/search?q=In+openai+gym,+what+is+Discrete()?
      %li
  
        This URL gives a simple description:
      %li
        %a(href='https://gym.openai.com/docs/' target='x')
          https://gym.openai.com/docs/
  
      %li
        Every environment comes with first-class Space objects that describe
        %br/
        the valid actions and observations.
      %li

        The Discrete space allows a fixed range of non-negative numbers,
        %br/
        so in this case valid actions are either 0 or 1.
        %br/
        The Box space represents an n-dimensional box,
        %br/
        so valid observations will be an array of 4 numbers.
      %li

        Box and Discrete are the most common Spaces.
      %li
        For CartPole-v0 one of the actions applies force to the left,
        %br/
        and one of them applies force to the right.

    So, Matthias is setting up a Discrete space which allows the agent
    %br/
    to push the cart in the 0-direction or the 1-direction which might be left or right.
    %br/
    Q: Why is Matthias getting the number of actions from env.action_space.n?
    %br
    A: He needs this integer at two places later in the script:
    %ul
      %li He uses nb_actions to the define number of outputs of a Neural-Net.
      %li He uses nb_actions to help initialize DQNAgent() which constructs an agent for the cart.


  %li
    I used Google to study the next section in the script which is displayed below:

    .syntax
      %pre
        =render 'class01ansqu24'
  %li
    %a(href='https://www.google.com/search?q=In+Keras+What+is+Sequential' target='x')
      https://www.google.com/search?q=In+Keras+What+is+Sequential
  
  %li
    Google returned excellent results from the above question.
    %br/
    I like this result the most:
    %br/
    %a(href='https://keras.io/getting-started/sequential-model-guide/' target='x')
      https://keras.io/getting-started/sequential-model-guide/
    %br/
    The idea of the API is simple.  
    %br/
    I create an empty model object and then add neural-net layers to it.
    %br/
    When I am done, I can visualize my model as something like this:
    %br/
    %img(src='/class01/class01ansqu26.png')
    %br/
    The model built by Matthias has 3 hidden layers instead of just one.
    %br/
    Also Matthias built an output layer which has two outputs instead of three.    
  %li Next, I studied this line of sytnax:
  
  %li
    .syntax
      %pre
        %code.python model.add(Flatten(input_shape=(1,) + env.observation_space.shape))
	
  %li I studied that line with the debugger:
  
  %li
    .syntax
      %pre
        =render 'class01ansqu28'
    
  %li The summary shows that this first layer is of type "Flatten".
  %li I asked google about that:
  %li
    %a(href='https://www.google.com/search?q=In+Keras+what+is+Flatten+Layer' target='x')
      https://www.google.com/search?q=In+Keras+what+is+Flatten+Layer
  %li So, it transforms an input with any nested-structure into a 1-D structure.
  %li Why does Matthias constrain this layer with Flatten?
  %li I assume he wants to ensure that each observation matches nicely with the input layer.
  %li Remember that in RL, an observation is a piece of data flowing from environment into agent.

%hr/    
%p Plain text format:

.syntax
  %pre
    =render 'class01ansqu1'

%a(href="/cclasses/class01#invbs") Lab Steps
%hr/


  
